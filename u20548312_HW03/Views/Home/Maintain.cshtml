@model u20548312_HW03.Models.MVM
@using Newtonsoft.Json;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Maintain";
}


<div class="container">
    <div class="row">
        <div class="col">
            <h2>Authors</h2>
            <button class="btn btn-warning pull-right" data-bs-toggle="modal" data-bs-target="#addAuthorModal">Add Author</button>
            <br />
            <br />
            <div class=" container" style="background-color: Yellow; border: 2px solid; border-radius: 10px;">
                <table style="width: 500px; height: 300px;">
                    <thead style=" border-bottom: solid 3px;">
                        <tr>
                            <th>Name</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Authors != null && Model.Authors.Any())
                        {
                            foreach (var a in Model.Authors)
                            {
                                <tr>
                                    <td>@a.name @a.surname</td>
                                </tr>

                            }
                        }
                        else
                        {
                            <tr>
                                <td>
                                    No Data Available
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />

            </div>
            @Html.PagedListPager((PagedList.IPagedList)Model.Authors, page => Url.Action("Maintain", new { pageIndex = page }),
                           new PagedListRenderOptions
                            {
                              LiElementClasses = new[] { "needsLoading" },
                              DelimiterBetweenPageNumbers = "|"
                            }
                           )
        </div>
        <div class="col">
            <div class="col">
                <h2>Types</h2>
                <button class="btn btn-warning pull-right" data-bs-toggle="modal" data-bs-target="#addTypeModal">Add Type</button>
                <br />
                <br />
                <div class=" container" style="background-color: Yellow; border: 2px solid; border-radius: 10px;">
                    <table style="width: 500px; height: 300px;">
                        <thead style=" border-bottom: solid 3px;">
                            <tr>
                                <th>Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Types != null && Model.Types.Any())
                            {
                                foreach (var t in Model.Types)
                                {
                                    <tr>
                                        <td>@t.Tname</td>
                                    </tr>

                                }
                            }
                            else
                            {
                                <tr>
                                    <td>
                                        No Data Available
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />

                </div>
                @Html.PagedListPager((PagedList.IPagedList)Model.Types, p2 => Url.Action("Maintain", new { pageIndex2 = p2 }),
                new PagedListRenderOptions
                 {
                   LiElementClasses = new[] { "needsLoading" },
                   DelimiterBetweenPageNumbers = "|"
                 }
                )
            </div>
        </div>
    </div>
    <div class="row">
        <div class=" col-lg">
            <h2>Borrows</h2>
            <button class="btn btn-warning pull-right" data-bs-toggle="modal" data-bs-target="#addBorrowModal">Add Borrow</button>
            <br />
            <br />
            <div class=" container" style="background-color: Yellow; border: 2px solid; border-radius: 10px;">
                <table style="width: 1000px; height: 300px;">
                    <thead style="border-bottom: solid 3px;">
                        <tr>
                            <th>Name</th>
                            <th>
                                Taken <br />
                                Date
                            </th>
                            <th>
                                Brought <br />
                                Date
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Borrows != null && Model.Borrows.Any())
                        {
                            foreach (var bo in Model.Borrows)
                            {
                                <tr>
                                    <td>@bo.name</td>
                                    <td>@bo.takenDate</td>
                                    <td>@bo.broughtDate</td>
                                </tr>

                            }
                        }
                        else
                        {
                            <tr>
                                <td>
                                    No Data Available
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />

            </div>
        </div>

        @Html.PagedListPager((PagedList.IPagedList)Model.Borrows, p3 => Url.Action("Maintain", new { pageIndex3 = p3 }),
                   new PagedListRenderOptions
                    {
                      LiElementClasses = new[] { "needsLoading" },
                      DelimiterBetweenPageNumbers = "|"
                    }
                   )
    </div>
    <br />

</div>

<!--Modals Section-->
<!--Create Modals-->
<!--Create Author-->
<div class="modal fade" id="addAuthorModal" role="dialog" aria-labelledby="addAuthorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAuthorModalLabel">Add New Author</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Add Author form goes here -->
                @using (Html.BeginForm("CreateAuthor", "Home", FormMethod.Post))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Authors.First().name)
                        @Html.EditorFor(model => model.Authors.First().name, new { @class = "form-control" })
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Authors.First().surname)
                        @Html.EditorFor(model => model.Authors.First().surname, new { @class = "form-control" })
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary">Add Author</button>
                }
                <br />
            </div>
        </div>
    </div>
</div>

<!--Create Type-->
<div class="modal fade" id="addTypeModal" role="dialog" aria-labelledby="addTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTypeModalLabel">Add New Type</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Add Type form goes here -->
                @using (Html.BeginForm("CreateType", "Home", FormMethod.Post))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Types.First().Tname)
                        @Html.EditorFor(model => model.Types.First().Tname, new { @class = "form-control" })
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary">Add Type</button>
                }
                <br />
            </div>
        </div>
    </div>
</div>

<!--Create Borrow-->
<div class="modal fade" id="addBorrowModal" role="dialog" aria-labelledby="addBorrowModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBorrowModalLabel">Add New Borrow</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Add Type form goes here -->
                @using (Html.BeginForm("CreateBorrow", "Home", FormMethod.Post))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Borrows.First().name)
                        @Html.EditorFor(model => model.Borrows.First().name, new { @class = "form-control" })
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Borrows.First().takenDate)
                        @Html.EditorFor(model => model.Borrows.First().takenDate, new { @class = "form-control" })
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Borrows.First().broughtDate)
                        @Html.EditorFor(model => model.Borrows.First().broughtDate, new { @class = "form-control" })
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary">Add Borrow</button>
                }
                <br />
            </div>
        </div>
    </div>
</div>


<!--Updat Modals-->
<!--Scripts-->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

